name: C_CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  linux:
    # The host should always be linux
    runs-on: ubuntu-22.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    # Run steps on a matrix of 4 arch/distro combinations
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu18.04
          - arch: ppc64le
            distro: alpine_latest
          - arch: s390x
            distro: fedora_latest
          - arch: none
            distro: none
            base_image: riscv64/busybox
    steps:
      - uses: actions/checkout@v3
      - uses: uraimo/run-on-arch-action@v2
        name: Build
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/artifacts"

          env: | # YAML, but pipe character is necessary
            artifact_name: git-${{ matrix.distro }}_${{ matrix.arch }}

          shell: /bin/sh
          install: |
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster|bullseye)
                apt-get update -q -y
                apt-get install -q -y git
                ;;
              fedora*)
                dnf -y update
                dnf -y install git which
                ;;
              alpine*)
                apk update
                apk add git
                ;;
            esac

          run: |
            cp $(which git) "/artifacts/${artifact_name}"
            echo "Produced artifact at /artifacts/${artifact_name}"
            cat /etc/issue
            git clone https://github.com/alexander-naumov/screen.git
            cd src
            ./autogen.sh
            ./configure
            make
            make clean

      - name: show the artifact
        run: |
            ls -al "${PWD}/artifacts"
            ${PWD}/artifacts/screen -v
            ${PWD}/artifacts/screen --help

  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [zero_raspbian, zero_raspios, zero_dietpi, zero2_raspios, zero2_dietpi, zero2_64_raspios, zero2_64_dietpi, fedora_x86_64]
        include:
        - target: zero_raspbian
          cpu: arm1176
          cpu_info: cpuinfo/raspberrypi_zero_w
          base_image: raspbian_lite:latest

        - target: zero_raspios
          cpu: arm1176
          cpu_info: cpuinfo/raspberrypi_zero_w
          base_image: raspios_lite:latest

        - target: zero_dietpi
          cpu: arm1176
          cpu_info: cpuinfo/raspberrypi_zero_w
          base_image: dietpi:rpi_armv6_bullseye

        - target: zero2_raspios
          cpu: cortex-a7
          cpu_info: cpuinfo/raspberrypi_zero2_w
          base_image: raspios_lite:latest

        - target: zero2_dietpi
          cpu: cortex-a7
          cpu_info: cpuinfo/raspberrypi_zero2_w
          base_image: dietpi:rpi_armv7_bullseye

        - target: zero2_64_raspios
          cpu: cortex-a53
          cpu_info: cpuinfo/raspberrypi_zero2_w_arm64
          base_image: raspios_lite_arm64:latest

        - target: zero2_64_dietpi
          cpu: cortex-a53
          cpu_info: cpuinfo/raspberrypi_zero2_w_arm64
          base_image: dietpi:rpi_armv8_bullseye

        - target: fedora_x86_64
          distro: fedora_latest

    steps:
    - uses: actions/checkout@v3

    - name: uname
      shell: bash
      run: cat /etc/issue

    - name: autogen
      shell: bash
      working-directory: ${{github.workspace}}/src
      run: ./autogen.sh

    - name: configure
      shell: bash
      working-directory: ${{github.workspace}}/src
      run: ./configure

    - name: make
      shell: bash
      working-directory: ${{github.workspace}}/src
      run: make

    - name: make clean
      shell: bash
      working-directory: ${{github.workspace}}/src
      run: make clean


  openbsd:
    runs-on: macos-12
    steps:
    - name: Bootstrap OpenBSD-latest
      uses: mario-campos/emulate@v1
      with:
        operating-system: openbsd-latest

    - name: Install Dependencies
      run: pkg_add gmake git automake-1.15.1

    - name: Build and Test
      run: |
        git clone https://github.com/alexander-naumov/screen.git
        cd screen/src
        export AUTOCONF_VERSION=2.69
        export AUTOMAKE_VERSION=1.15
        ./autogen.sh
        ./configure --disable-pam
        gmake
        ./screen -v
        ./screen -help

  netbsd:
   runs-on: macos-12
   steps:
   - name: Bootstrap NetBSD-latest
     uses: mario-campos/emulate@v1
     with:
       operating-system: netbsd-latest

   - name: Build and Test
     run: |
        git clone https://github.com/alexander-naumov/screen.git
        cd screen/src
        ./autogen.sh
        ./configure
        make
        ./screen -v
        ./screen -help

  macos:
    strategy:
      matrix:
        os: [ macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: autogen
      shell: bash
      working-directory: ${{github.workspace}}/src
      run: ./autogen.sh

    - name: configure
      shell: bash
      working-directory: ${{github.workspace}}/src
      run: ./configure

    - name: make
      shell: bash
      working-directory: ${{github.workspace}}/src
      run: make

    - name: make clean
      shell: bash
      working-directory: ${{github.workspace}}/src
      run: make clean
